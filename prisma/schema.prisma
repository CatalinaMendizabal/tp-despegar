// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id               Int     @id @default(autoincrement())
  departureAirport String
  arrivalAirport   String
  departurePlace   String
  arrivalPlace     String
  outgoing         Boolean
  price            Float
  passengers       Int
  tax              Float
}

enum Luggage {
  BACKPACK
  CARRY_ON
  SUITCASE
}

enum ClassType {
  ECONOMY
  FIRST
  BUSINESS
}

model Flight {
  id             Int          @id @default(autoincrement())
  company        String
  departureHour  DateTime
  arrivalHour    DateTime
  departurePlace String
  arrivalPlace   String
  price          Float
  luggage        Luggage[]
  type           ClassType
  offer          Offer[]
  Cart           Cart?        @relation(fields: [cartId], references: [id])
  cartId         Int?
  CartFlight     CartFlight[]
}

model Offer {
  id              Int    @id @default(autoincrement())
  flightId         Int
  flight           Flight @relation(fields: [flightId], references: [id])
  ammountOfPeople Int
  ammoutOfNights  Int
  tax             Float
  flightPrice      Float
  hotelName       String
  hotelPrice      Float
  place           String
}

model Cart {
  id         Int          @id @default(autoincrement())
  userId     Int          @unique
  user       User         @relation(fields: [userId], references: [id])
  flights     Flight[]
  cartFlight CartFlight[]
}

model User {
  id    Int    @id @default(autoincrement())
  email String
  name  String
  cart  Cart?
}

model CartFlight {
  id       Int    @id @default(autoincrement())
  cart     Cart   @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cartId   Int
  flight    Flight @relation(fields: [flightId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  flightId  Int
}
